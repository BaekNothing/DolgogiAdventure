<2019-06-24>
처음으로 돌곶이 어드벤쳐를 만들어야겠다고 생각한지도 벌써 3년 전이다. 막연하게 포인트 & 클릭으로 만들면 어떻게든 될거라고 생각했지만. 진짜 문제는 액션을 구동하는게 아니라, 1~4학년까지의 수업내용을 체계화하고 환경을 구성하는것에 있었다. 그리고 그 시도에서 번번히 만족스러운 결과물을 내놓지 못한 채 시간만 흘렀고. 

과제란 무엇인가? 작업을 수행할 때 개개인의 역량을 정량화하여 표현하는것이 가능한가? 수업이 어떤 종류의 것인지 함축적으로 전달하기 위해서는 최소 몇줄의 텍스트가 필요한가, 이런 작업이 의미가 있는가? (수많은 다른 작품들이 그러하듯) 진열장 맨 구석에서 먼지만 쌓일 이 작업을 매달리는 이유가 무엇인가 등의 고민을 했던 것 같다. 

사실 이것을 작성하는 지금도, 위에 있는 질문들에 대한 답변을 아주 자신있게 내놓지는 못한다. 3년동안 기술적으로 조금 성장했을 뿐, 전체적인 시스템을 기획하고 시뮬레이션을 위한 환경을 구성하는것은 아직 나에게 벅차게만 느껴진다. 하지만 몇몇 게임들 (특히 FF14)이 최근 나에게 어떤 영감을 주었고. 적합한 시도일지는확신할 수 없지만 한번 그 부분들을 구현해 보려고 한다. 

재미있는 결과물을 만드는 재주는 나에게 없다는게 거의 확실해진 것 같으니, 최소한 내가 즐겁게 할 수 있는 결과물을 만들려고 발버둥쳐보자.


<2019-06-25>
오래간만에 프로세싱을 만져봤다. (DA와는 무관하게) 기획없이 개발만 하는것은 쉽다. 개발없이 기획만 하는것도 쉽다. 문제는 두가지를 동시에 하는 것이다. 개발하다보면 큰 그림을 위한 작은 스텝이 일종의 "래피드 프로토타이핑"으로 작동할 때가 있다. 그러면 그곳에서 결점이 보이고, 그것을 수정하기 위해 기획을 수정한다. 기획이 수정되면 이전의 작업은 쓸모가 없어지고. 또다시 제작을 하려들면 다시 그것이 "래피드 프로토타이핑"으로 작동하고... (이하반복)

최근에 이런 일이 일어나는 이유이지 않을까? 하는 생각중에 기획이 불완전하기(즉 비 명시적으로 내 뇌에서만 존재하는바람에 아주 손쉽게 기획수정이 가능하기) 때문이 아닐까 생각한다.

일단 명시적으로 기획서를 쓰고, 각 단계를 세분화해서 수정하기 어렵게 만드는것이 필요해보인다.. 개발은 그 다음이다.


<2019-06-27>
어제는 술을 많이 마셨고, 오늘은 기운이 없다. 문제는 그 부분이다, 리소스를 어디까지 타협할 것인가? 개인이 생산하는 양은 한계가 있고, 얼마나 내가 성장할 수 있을지 불확실할 때 나에게 도움이 될 것인지 아닌지 확실하지 않은 것들에 얼마나 시간을 투자할 수 있는가? 그 부분이 고민이다.


<2019-06-29>
오늘은 대략적인 데이터 구조를 구상해봤다, 한번 구동하는 스크립트를 짜보고 나니까, 어떻게 분류를 해 두어야 편할지 감이 오는 것 같다. 실험용 데이터도 대략적으로 넣어두었다 (그래픽 리소스는 아직이다) 다음주에는 스크립트를 짜기 시작해볼 예정이다.


<2019-06-30> 
육체노동을 하고 나면, 도무지 일을 할 컨디션이 아니게 된다. 오늘은 쉬어야겠다.


<2019-07-01>
벌써 7월이다, 자료구조를 불러오는 방식을 고민하고있다. 어떻게 짜는게 효율적일까. 과제를 하고자 할 때 구조를 어떻게 짜야 할까? 현재 자료를 저장하는건 Json을 쓰는게 맞을까, CSV로 저장하는게 맞을까. 현재는 PlayerPrefs로 저장하는 쪽으로 가닥이 잡힌다.

일단 이쪽으로 쑤셔넣고, 아니다 싶으면 빼야지


<2019-07-02>
손오공마라에서 채식마라탕을 먹었다. 두부의 비율(이번에는 거의 1:2정도)이 조금 높아서 전반적으로 싱거워진 모양이다. 채소/두부의 비율이 1:1.3정도일때가 가장 맛있었던 것 같은데 확실하지는 않다. 맵기는 역시 2단계가 내 한계다. 오늘은 비교적 속이 편하다. 고기가 없는 삶에 생각보다 성공적으로 적응하고 있는 중이다.
영화(겟아웃)을 좀 보고 돌아와서 다시 스크립트를 짰는데, 지난번에 막혀서 어렵게 돌아간 부분을 또 마주쳤고, 이번에는 해결할 방법을 찾았다. 성장한걸까 4년전의 나나 지금의 나나 별다를게 없는 것 같아 울적했는데 이번 일로 기분이 조금 나아졌다. 동일한 스크립트에 선택한 오브젝트의 이름에 따라 다른 변수를 주고싶다면, Broadcast를 이용하면 된다. 퍼포먼스 문제가 생긴다면 그건 그때가서 해결하도록 하자. 지금은 일단 작동하는게 어디람

<2019-07-03>
오랜 얘기를 했습니다, 덕분에 작업은 하나도 못했군요. 다만 즐거웠으므로 괜찮다고 생각합니다.

<2019-07-04>
과제값을 불러오고, 스킬에 따라서 작업을 진행하는것까지 진행했다. 이제 간단한 과제 공식을 만들면 될 것 같다(난수도 생성하고..) 고민되는 지점이라면, 특정 상황에서 강화되는 스킬이나, 활성화되는 스킬을 CSV내에서 어떻게 표현해야 할 지 잘 모르겠다는 점이다. 아마 특정한 항목을 만들거나 해야할텐데.. 무언가 일괄적인 방식이 없을까?
그리고, 스킬은 최대 32가지 정도면 충분할 듯 하다 (이 이상으로 힘을 쏟지 말자)


<2019-07-05>
스킬 버튼을 누르면 > 설명하는 판넬이 나타나고, 스킬실행을 물어보는 버튼으로 바뀌어야 하는데 잘 안된다. 스킬에는 성공률을 적용했다, 스텟 보정치와 선택적 상황에서의 활성화는 따로 구현해야 할 듯 하다. 오후에 다시 와서 판넬이랑 텍스트 구현완료 했따
상태에따른 애니메이션 구현중

<2019-07-06>
애니메이션을 연결했다. 변수매칭을 자꾸 못하길래 이것저것 건드려봤는데, 아마 긴 변수명을 인지하지 못하는 듯 하다 (추정) 아니면 param명을 따로 string의 형태로 선언해 둬야 하던가. 그 부분에서 애를 조금 먹은 것 빼고는 순조롭다. 결과창을 띄워주고, (성공 / 실패 애니메이션) 선택했을 때, 예상 변화치를 보여주는 것 (아마 슬라이드를 하나 더 만들어서 적용하면 되지 않을까 싶다), 그리고 "요구치 이상으로" 작업을 진행했을 때, 어떻게 할지 정도를 구현하면 될 듯 하다.


<2019-07-07>
얼추 구조를 짰다, 이제 스킬을 선택하면 해당 스킬에 대한 설명이 뜨고 얼마나 영향을 미칠지 가늠해서 슬라이드로 보여준다, 다시 누르면 해당 스킬을 실행하고 (애니메이션 재생), 애니메이션이 끝나면 성공/실패애니메이션이랑 결과가 반영되는 방식이다. (최종적인 결과는 Playerperf로 수업 이름과 함께 저장됨) Playerperf의 구조는 일단 지금 필요한건 1줄이니까, 한줄만 하지만.. 앞으로 대략 30~40개의 과제가 있을텐데 (더 있을수도 있음) 어떻게 체계화할지 고민해봐야 한다. 
Assignment와 AcitveSkill이 두 스크립트는 서로 꽤 긴밀하게 연결되어 있어서 (한쪽만 가지고는 작동X).. 원래 의도는 과제애 대한 정보는 과제에만 스킬제어는 스킬에만 할 생각이었지만. 이게 마음처럼 쉽지가 않다. 새롭게 뜯어서 뭔가 하기에는 지금 너무 늦은 것 같아서 방치해두지만 다음에는 애매하면 한 스크립트로 짜는게 좋을 것 같다는 생각이 든다.
하여간 이제 과제에 대한 부분은 슬슬 마무리가 되어가니, 다른 페이지를 만들어봐야겠다. 일단.. 상점이랑 인벤토리를 구현해볼까. 

<2019-07-08>
스킬이 fail이 날 경우, 완료애니메이션이 실행되지 않기 때문에, 작업애니메이션이 무한히 플레이 되는 경우(?) 가 있다. 단순히 실패애니메이션을 지정하지 않아서생긴 것이므로, 버그가 아님 (단 근시일내에 실패 애니메이션을 지정할 것)

인벤토리 구현중, 모든것을 버튼으로 만들어야 하는지? 모든것을 한 화면에 담아야하는지?고민이다. 간만에 대청소를 했더니 체력이 너무 많이 빠진다. 나머지는 다음에 해야지

<2019-07-09>
아이템 이름을 설정하고, 갯수를 체크하고 설명을 불러오는것 까지는구현이 되었다. 앞으로 갯수가 많아지면, 이게 문제가 될거같은데, 뭔가 방법 (템 갯수를 줄이거나.. item갯수를 stirng으로 구현하거나..)을 강구해야 할 것 같다

<2019-07-10>
관습적으로 사용되는 몇가지 기능들을 구현했다.. 다만 이 아이템이 굳이? 필요한지는 의문스럽다, 100을 회복시키는 포션이 있다면, 50을 회복시키는 포션과 150을 회복시키는 포션을 굳이 만들 필요가 있을까? 만약 각각 다른 고유한 효과를 갖게된다면, 시스템 전반에 대한 기획이 선행되어야 한다.. 일단은 HP(혹은 체력)에 영향을 미치도록 해 두었지만.. 글쎄, 스테이터스, 체력, 행복도 정도로 나누고. 스탯을 도핑할때는 체력이나 행복도를 희생시키고, 각각의 아이템마다 체력과 행복도에 영향을 미치는 고유한 스탯을 설정하면 될 듯 하다 (둘다 회복하거나, 하나를 희생하거나 등..)

그렇다면 스테이터스를 도핑해야 하는 이유는 뭘까? 과제를 더 잘하기위해? 수업을 더 잘 듣기위해? 일단은 과제성공률 등에 쓰일거라고 생각했는데, 이것으로는 조금 부족하다. 조금 상세한 기획이 필요하다.

<2019-07-11>
사람들과 어울려 노는것은 즐겁습니다. 거의 반년만에 이렇게 다시 모여서 노는군요